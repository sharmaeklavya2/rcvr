# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-09 19:58
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('pin', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='District PIN')),
                ('name', models.CharField(blank=True, max_length=60, verbose_name='District Name')),
            ],
            options={
                'db_table': 'District',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
            ],
            options={
                'db_table': 'Registration',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='School Name')),
                ('school_type', models.CharField(choices=[('S', 'School'), ('C', 'College')], max_length=1, verbose_name='Type')),
                ('base_address', models.CharField(help_text="Please don't include your district, city, state in your address.\nThat will be extracted from your Sub-district/PIN code", max_length=250, verbose_name='Address')),
                ('phone', models.BigIntegerField(unique=True)),
                ('principal_name', models.CharField(max_length=100, verbose_name="Principal's name")),
                ('counsellor_name', models.CharField(max_length=100, verbose_name="Counsellor's name")),
                ('counsellor_phone', models.BigIntegerField(blank=True, null=True, verbose_name="Counsellor's phone")),
            ],
            options={
                'db_table': 'School',
                'verbose_name': 'School/College',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('scode', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='State Code')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='State Name')),
            ],
            options={
                'db_table': 'State',
            },
        ),
        migrations.CreateModel(
            name='SubDistrict',
            fields=[
                ('pincode', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='PIN Code')),
                ('pin', models.PositiveIntegerField(verbose_name='Sub-District PIN')),
                ('name', models.CharField(blank=True, max_length=60, verbose_name='Sub-District Name')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.District')),
            ],
            options={
                'db_table': 'SubDistrict',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_stamp', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('update_stamp', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('name', models.CharField(max_length=100)),
                ('aadharid', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid Aadhar ID', regex='\\d{12}')], verbose_name='Aadhar ID')),
                ('phone', models.BigIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=2)),
                ('dob', models.DateField(null=True, verbose_name='Date of birth')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('skills', models.CharField(blank=True, max_length=100)),
                ('base_address', models.CharField(help_text="Please don't include your district, city, state in your address.\nThat will be extracted from your Sub-district/PIN code", max_length=250, verbose_name='Address')),
                ('perm_base_address', models.CharField(help_text="Please don't include your district, city, state in your address.\nThat will be extracted from your Sub-district/PIN code", max_length=250, verbose_name='Permanent Address')),
                ('perm_subdistrict', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='perm_volunteer_set', to='main.SubDistrict', verbose_name='Permanent Sub-Discrict')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.School')),
                ('subdistrict', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_set', to='main.SubDistrict', verbose_name='Sub-District')),
            ],
            options={
                'db_table': 'Volunteer',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='subdistrict',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SubDistrict', verbose_name='Sub-District'),
        ),
        migrations.AddField(
            model_name='registration',
            name='volunteer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Volunteer'),
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.State'),
        ),
        migrations.AlterUniqueTogether(
            name='subdistrict',
            unique_together=set([('pin', 'district')]),
        ),
    ]
